{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","StateProvider.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","option","name","Header","spotify","user","placeholder","type","Avatar","display_name","images","url","SongRow","track","playSong","console","log","album","artists","artist","Body","daily_music","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cdc9f12a.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"1c3041be79494aab9ecbd1dfdd157557\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash     // yaani hethy masoula al # baad localhost/3000\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport \"./Login.css\"; \nimport { loginUrl } from \"./spotify\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <a href={loginUrl}>LOGIN TO SPOTIFY</a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebarOption\"> \n        {Icon && <Icon className=\"sidebarOption__icon\" />}\n        {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from \"react\";\nimport \"./Sidebar.css\"; \nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport { useStateValue } from \"./StateProvider\";\n\n\nfunction Sidebar() {\n  const [{ playlists }, dispatch] = useStateValue();\n  \n  return ( \n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\n      <br/>\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\n      <hr/>\n      \n      {playlists?.items?.map((playlist) => (\n        <SidebarOption option={playlist.name} />\n      ))} \n    </div>\n  );\n}\n \n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { Avatar } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect } from \"react\";\n\nfunction Header({ spotify }) {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <SearchIcon />\n        <input\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"header__right\">\n        <Avatar alt={user?.display_name} src={user?.images[0]?.url} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow({ track, playSong }) {\n  console.log(track);\n  return (\n    <div className=\"songRow\" >\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\nimport \"./Body.css\"; \nimport Header from \"./Header\";\nimport { useStateValue } from \"./StateProvider\";\nimport SongRow from \"./SongRow\";\n\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nfunction Body({spotify}) {\n  const [{ daily_music }, dispatch] = useStateValue();\n\n  return ( \n    <div className=\"body\">\n        <Header spotify={spotify}/>\n\n        <div className=\"body__info\">\n            <img src={daily_music?.images[0].url} alt=\"\" />\n            <div className=\"body__infoText\">\n              <strong>PLAYLIST</strong>\n              <h2>Discover Weekly</h2>\n              <p>{daily_music?.description}</p>\n            </div>\n        </div>\n\n        <div className=\"body__songs\">\n            <div className=\"body__icons\">\n              <PlayCircleFilledIcon\n                className=\"body__shuffle\" \n              />\n              <FavoriteIcon fontSize=\"large\" />\n              <MoreHorizIcon />\n            </div> \n\n\n            {daily_music?.tracks.items.map((item) => (\n              <SongRow  track={item.track} />\n            ))}\n        </div>\n\n\n    </div>\n  );\n}\n\nexport default Body;\n","import React from \"react\"; \nimport \"./Footer.css\"; \n\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";  \nimport { Grid, Slider } from \"@material-ui/core\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\n\n\nfunction Footer() {\n  return ( \n    <div className=\"footer\">\n      <div className=\"footer__left\">\n          <img className=\"footer__albumLogo\" />\n          <div className=\"footer__songInfo\">\n            <h4>Yeah</h4>\n            <p>Usher</p>\n          </div>\n      </div>\n\n      <div className=\"footer__center\">\n          <ShuffleIcon className=\"footer__green\" />\n          <SkipPreviousIcon className=\"footer__icon\" />\n          <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\n          <SkipNextIcon  className=\"footer__icon\" />\n          <RepeatIcon className=\"footer__green\" />\n      </div>\n\n      <div className=\"footer__right\">\n          <Grid container spacing={2}>\n              <Grid item>\n                <PlaylistPlayIcon />\n              </Grid>\n              <Grid item>\n                <VolumeDownIcon />\n              </Grid>\n              <Grid item xs>\n                <Slider />\n              </Grid>\n          </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\"; \nimport \"./Player.css\";\nimport Sidebar from \"./Sidebar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar /> \n        <Body spotify={spotify}/>\n      </div> \n      <Footer />\n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useEffect, useState } from 'react'; \nimport './App.css';\nimport Login from \"./Login\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst spotify = new SpotifyWebApi();\n\n\nfunction App() {\n  \n  const [{ user, token }, dispatch] = useStateValue();\n\n\n  // Run Code based on a given condition \n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";   // hetha besh naamlou clean Url\n    let _token = hash.access_token;\n\n    if (_token) {   // lenna khazenna el token fel balsa\n      \n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token); // star hetha houwa eli yakhlik thez o tjib eli t7eb mel spotify api\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"03PWitUe2WwTwHJ8B6VhyT\").then((response) =>\n        dispatch({\n          type: \"SET_DAILY_MUSIC\",\n          daily_music: response,\n        })\n      );\n\n\n    }\n  }, []);\n  \n\n  return (\n    <div className=\"app\"> \n      {\n        token ? \n          <Player  spotify={spotify}/> : \n          <Login /> \n      } \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport const initialState = {\n  user: null,\n  playlists: [],\n  playing: false,\n  item: null,\n  // remove after finished developing..\n  /*  token: 'BQBBwhp-VznheS8gQMH_7ha13xU9YneBUmn8zJJqgWktluMVbCiAcLpjVzAP-HjSTl-01MZC2DsJXc0gugzCm93PAgbjrWFe8xTbCJ1yoxPyi-vxI0eUKoDt6XATzb9H0fBvYC2zaV7H9tbk2_wf--kdeK-awrhmuNetzGwjLbH1MUO-',\n   */\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      }; \n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token\n    };\n    case \"SET_PLAYLISTS\":\n      return {\n        ...state,\n        playlists: action.playlists,\n    };\n\n    case \"SET_DAILY_MUSIC\":\n      return {\n        ...state,\n        daily_music: action.daily_music,\n    };\n    \n    default:\n      return state; \n  }\n}\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}